{"version":3,"sources":["context/contextReducer.js","context/context.js","components/Details/styles.js","constants/categories.js","useTransactions.js","components/Details/Details.jsx","components/Main/Form/styles.js","utils/formatDate.js","components/Main/Form/Form.jsx","components/Main/List/styles.js","components/Main/List/List.jsx","components/InfoCard.jsx","components/Main/styles.js","components/Main/Main.jsx","styles.js","App.js","index.js"],"names":["contextReducer","state","action","transactions","type","filter","t","id","payload","localStorage","setItem","JSON","stringify","initialState","parse","getItem","ExpenseTrackerContext","createContext","Provider","children","useReducer","dispatch","console","log","balance","reduce","acc","currVal","amount","value","deleteTransaction","addTransaction","transaction","makeStyles","income","borderBottom","expense","incomeColors","expenseColors","incomeCategories","color","expenseCategories","useTransactions","title","forEach","c","transactionsPerType","useContext","total","categories","category","find","filteredCategories","chartData","datasets","data","map","backgroundColor","labels","maintainAspectRatio","responsive","Details","subheader","classes","useStyles","Card","className","CardHeader","CardContent","Typography","variant","height","width","radioGroup","display","justifyContent","marginBottom","button","marginTop","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","formatDate","Form","useState","formData","setFormData","segment","useSpeechContext","createTransaction","Number","isNaN","includes","iC","uuidv4","useEffect","intent","isFinal","entities","s","charAt","slice","toLowerCase","selectedCategories","Grid","container","spacing","item","xs","align","gutterBottom","words","w","FormControl","fullWidth","InputLabel","Select","onChange","e","target","MenuItem","key","TextField","label","Button","onClick","theme","avatarIncome","green","avatarExpense","palette","getContrastText","red","list","maxHeight","overflow","List","dense","Slide","direction","in","mountOnEnter","unmountOnExit","ListItem","ListItemAvatar","Avatar","MoneyOff","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","Delete","isIncome","Math","round","random","InfoCard","elevation","style","textAlign","padding","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","cardContent","divider","margin","Main","root","lineHeight","Divider","desktop","breakpoints","up","mobile","down","main","paddingBottom","last","grid","App","speechState","useRef","SpeechState","Recording","current","scrollIntoView","alignItems","sm","ref","ReactDOM","render","appId","language","document","getElementById"],"mappings":"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","file":"static/js/main.56c9f343.chunk.js","sourcesContent":["//Reducer => a function that takes a old state  and create action \r\nconst contextReducer = (state, action) => {\r\n    let transactions; \r\n\r\n    switch (action.type) {\r\n        case 'DELETE_TRANSACTION': \r\n            transactions = state.filter((t) => t.id !== action.payload);\r\n            localStorage.setItem('transaction', JSON.stringify(transactions));\r\n            return transactions;\r\n        case 'ADD_TRANSACTION': \r\n            transactions = [action.payload, ...state];\r\n            localStorage.setItem('transaction', JSON.stringify(transactions));\r\n            return transactions;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default contextReducer;\r\n","import React, { useReducer, createContext } from 'react';\r\nimport contextReducer from './contextReducer.js';\r\n\r\nconst initialState = JSON.parse(localStorage.getItem(\"transaction\")) || [];\r\n\r\nexport const ExpenseTrackerContext = createContext(initialState);\r\n\r\nexport const Provider = ({ children }) => {\r\n    const [ transactions, dispatch ] = useReducer(contextReducer, initialState);\r\n\r\n    //Action Creators \r\n    const deleteTransaction = (id) => dispatch({ type: 'DELETE_TRANSACTION', payload: id });\r\n\r\n    const addTransaction = (transaction) => dispatch({ type: 'ADD_TRANSACTION', payload: transaction });\r\n\r\n    console.log(transactions);\r\n\r\n    const balance = transactions.reduce((acc, currVal) => (currVal.type === 'Expense' ? acc - currVal.amount : acc + currVal.amount), 0);\r\n\r\n    return(\r\n        <ExpenseTrackerContext.Provider value={{ deleteTransaction, addTransaction, transactions, balance}}>\r\n            {children}\r\n        </ExpenseTrackerContext.Provider>\r\n    )\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n    income : {\r\n        borderBottom: '10px solid rgba(0, 255, 0, 0.5)',\r\n    },\r\n    expense: {\r\n        borderBottom: '10px solid rgba(255, 0, 0, 0.5)'\r\n    }\r\n}));\r\n","const incomeColors = ['#123123', '#154731', '#165f40', '#16784f', '#14915f', '#10ac6e', '#0bc77e', '#04e38d', '#00ff9d'];\r\nconst expenseColors = ['#b50d12', '#bf2f1f', '#c9452c', '#d3583a', '#dc6a48', '#e57c58', '#ee8d68', '#f79d79', '#ffae8a', '#cc474b', '#f55b5f'];\r\n\r\nexport const incomeCategories = [\r\n  { type: 'Business', amount: 0, color: incomeColors[0] },\r\n  { type: 'Investments', amount: 0, color: incomeColors[1] },\r\n  { type: 'Extra income', amount: 0, color: incomeColors[2] },\r\n  { type: 'Deposits', amount: 0, color: incomeColors[3] },\r\n  { type: 'Lottery', amount: 0, color: incomeColors[4] },\r\n  { type: 'Gifts', amount: 0, color: incomeColors[5] },\r\n  { type: 'Salary', amount: 0, color: incomeColors[6] },\r\n  { type: 'Savings', amount: 0, color: incomeColors[7] },\r\n  { type: 'Rental income', amount: 0, color: incomeColors[8] },\r\n];\r\n\r\nexport const expenseCategories = [\r\n  { type: 'Bills', amount: 0, color: expenseColors[0] },\r\n  { type: 'Car', amount: 0, color: expenseColors[1] },\r\n  { type: 'Clothes', amount: 0, color: expenseColors[2] },\r\n  { type: 'Travel', amount: 0, color: expenseColors[3] },\r\n  { type: 'Food', amount: 0, color: expenseColors[4] },\r\n  { type: 'Shopping', amount: 0, color: expenseColors[5] },\r\n  { type: 'House', amount: 0, color: expenseColors[6] },\r\n  { type: 'Entertainment', amount: 0, color: expenseColors[7] },\r\n  { type: 'Phone', amount: 0, color: expenseColors[8] },\r\n  { type: 'Pets', amount: 0, color: expenseColors[9] },\r\n  { type: 'Other', amount: 0, color: expenseColors[10] },\r\n];\r\n\r\nexport const resetCategories = () => {\r\n  incomeCategories.forEach((c) => c.amount = 0);\r\n  expenseCategories.forEach((c) => c.amount = 0);\r\n};","import { useContext } from 'react';\r\nimport { ExpenseTrackerContext } from './context/context';\r\nimport { incomeCategories, expenseCategories, resetCategories } from './constants/categories';\r\n\r\nconst useTransactions = (title) => {\r\n    resetCategories();\r\n    const {transactions} = useContext(ExpenseTrackerContext);\r\n    const transactionsPerType = transactions.filter((t) => t.type === title);\r\n    const total = transactionsPerType.reduce((acc, currVal)=> acc += currVal.amount, 0);\r\n    const categories = title === 'Income'? incomeCategories : expenseCategories;\r\n\r\n    console.log(transactionsPerType, total, categories);\r\n\r\n    transactionsPerType.forEach((t) => {\r\n        const category = categories.find((c) => c.type === t.category)\r\n        if(category) category.amount += t.amount;\r\n    })\r\n\r\n    const filteredCategories = categories.filter((c)=> c.amount > 0);\r\n    const chartData = {\r\n        datasets: [{\r\n            data: filteredCategories.map((c) => c.amount),\r\n            backgroundColor: filteredCategories.map((c) => c.color)\r\n        }],\r\n        labels: filteredCategories.map((c)=>c.type),\r\n        maintainAspectRatio: true,\r\n        responsive: true\r\n    }\r\n\r\n    return {filteredCategories, total, chartData};\r\n}   \r\n\r\nexport default useTransactions;","import React from 'react';\r\nimport { Card, CardHeader, CardContent, Typography } from '@material-ui/core';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport useStyles from './styles';\r\nimport useTransactions from '../../useTransactions';\r\n\r\nconst Details = ({ title, subheader }) => {\r\n  const { total, chartData } = useTransactions(title);\r\n  const classes = useStyles();\r\n  const height = 209;\r\n  const width = 400\r\n  return (\r\n    <Card className={title === 'Income' ? classes.income : classes.expense}>\r\n      <CardHeader title={title} subheader={subheader} />\r\n      <CardContent>\r\n        <Typography variant=\"h5\">₹{total}</Typography>\r\n        <Doughnut data={chartData} height={height} width={width} />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n  radioGroup: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginBottom: '-10px',\r\n  },\r\n  button: {\r\n    marginTop: '20px',\r\n  },\r\n}));","export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) { month = `0${month}`; }\r\n  if (day.length < 2) { day = `0${day}`; }\r\n\r\n  return [year, month, day].join('-');\r\n};\r\n","import React, {useState, useEffect, useContext} from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport useStyles from './styles.js';\r\nimport { incomeCategories, expenseCategories} from '../../../constants/categories';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport formatDate from '../../../utils/formatDate';\r\n\r\nconst initialState = {\r\n    amount: '',\r\n    category: '',\r\n    type: 'Income',\r\n    date: formatDate(new Date()),\r\n}\r\n\r\nconst Form = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Income' });\r\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Expense' });\r\n    }\r\n\r\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setFormData({ ...formData, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setFormData({ ...formData, type: 'Income' });\r\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n        return createTransaction();\r\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Income', category });\r\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n        {segment ? (\r\n        <div className=\"segment\">\r\n          {segment.words.map((w) => w.value).join(\" \")}\r\n        </div>\r\n      ) : null}\r\n         {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n        <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\r\n      </Grid>\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { red, green } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  avatarIncome: {\r\n    color: '#fff',\r\n    backgroundColor: green[500],\r\n  },\r\n  avatarExpense: {\r\n    color: theme.palette.getContrastText(red[500]),\r\n    backgroundColor: red[500],\r\n  },\r\n  list: {\r\n    maxHeight: '150px',\r\n    overflow: 'auto',\r\n  },\r\n}));","import React, {useContext} from 'react';\r\nimport { List as MUIList, ListItem, ListItemAvatar, ListItemText, Avatar, ListItemSecondaryAction, IconButton, Slide} from '@material-ui/core';\r\nimport { Delete, MoneyOff } from '@material-ui/icons';\r\nimport useStyles from './styles';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\n\r\nconst List = () => {\r\n    const classes = useStyles();\r\n    const {deleteTransaction, transactions} = useContext(ExpenseTrackerContext);\r\n      \r\n    return (\r\n        <MUIList dense={false} className={classes.list}>\r\n            {transactions.map((transaction) => (\r\n                <Slide direction=\"down\" in mountOnEnter unmountOnExit key={transaction.id}>\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Avatar className={transaction.type === 'Income'? classes.avatarIncome: classes.avatarExpense}>\r\n                                <MoneyOff />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={transaction.category} secondary={`₹${transaction.amount} - ${transaction.date}`}/>\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteTransaction(transaction.id)}>\r\n                               <Delete />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                </Slide>\r\n            ))}\r\n        </MUIList>\r\n    )\r\n}\r\n\r\nexport default List;\r\n","import React from 'react';\r\n\r\nconst isIncome = Math.round(Math.random());\r\n\r\nconst InfoCard = () => {\r\n    return (\r\n        <div elevation={3} style={{ textAlign: 'center', padding: '0 10%'}}>\r\n            Try saying: <br />\r\n            Add {isIncome ? 'Income ' : 'Expense '} \r\n            for {isIncome? '₹100 ': '₹50 '}\r\n            in Category {isIncome? 'Business ' : 'House '}\r\n            for {isIncome? 'Monday ': 'Wednesday '}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InfoCard;\r\n","import {makeStyles} from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    cardContent: {\r\n      paddingTop: 0,\r\n    },\r\n    divider: {\r\n      margin: '20px 0',\r\n    },\r\n  }));\r\n","import React, {useContext} from 'react';\r\nimport { Card, CardHeader, CardContent, Typography, Grid, Divider } from '@material-ui/core';\r\nimport Form from './Form/Form';\r\nimport List from './List/List';\r\nimport {ExpenseTrackerContext} from '../../context/context';\r\nimport InfoCard from '../InfoCard';\r\nimport useStyles from './styles';\r\n\r\nconst Main = () => {\r\n    const classes = useStyles();\r\n    const {balance} = useContext(ExpenseTrackerContext);\r\n    return (\r\n        <Card className = {classes.root}>\r\n            <CardHeader title=\"Expense Tracker\" subheader=\"Powered by Speechly\" />\r\n            <CardContent>\r\n                <Typography align=\"center\" variant=\"h5\">Total Balance ₹{balance}</Typography>\r\n                <Typography variant=\"subtitle1\" style={{lineHeight: '1.5em', marginTop: '20px'}}>\r\n                    <InfoCard></InfoCard>\r\n                </Typography>\r\n                <Divider className={classes.divider} />\r\n                <Form />\r\n            </CardContent>\r\n            <CardContent className={classes.cardContent}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <List />\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    desktop: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    mobile: {\r\n      [theme.breakpoints.down('sm')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    main: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        paddingBottom: '5%',\r\n      },\r\n    },\r\n    last: {\r\n      [theme.breakpoints.down('sm')]: {\r\n        marginBottom: theme.spacing(3),\r\n        paddingBottom: '200px',\r\n      },\r\n    },\r\n    grid: {\r\n      '& > *': {\r\n        margin: theme.spacing(2),\r\n      },\r\n    },\r\n  }));","import React, {useEffect, useRef} from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { PushToTalkButton, PushToTalkButtonContainer, ErrorPanel } from '@speechly/react-ui';\r\nimport { SpeechState, useSpeechContext} from '@speechly/react-client';\r\nimport Details from './components/Details/Details';\r\nimport Main from './components/Main/Main';\r\nimport useStyles from './styles';\r\n\r\nconst App = () => {\r\n    const classes = useStyles();\r\n    const { speechState } = useSpeechContext();\r\n    const main = useRef(null);\r\n    const executeScroll = () => main.current.scrollIntoView();\r\n    useEffect(() => {\r\n        if(speechState === SpeechState.Recording) {\r\n            executeScroll();\r\n        }\r\n    }, [speechState])\r\n    return (\r\n        <div>\r\n            <Grid className={classes.grid} container spacing={0} alignItems=\"center\" justifyContent=\"center\" style={{ height: '100vh'}}>\r\n                <Grid item xs={12} sm={4} className={classes.mobile}>\r\n                <Details title=\"Income\" />\r\n                </Grid>\r\n                <Grid ref={main} item xs={12} sm={3} className={classes.main}>\r\n                <Main />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} className={classes.desktop}>\r\n                <Details title=\"Income\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} className={classes.last}>\r\n                <Details title=\"Expense\" />\r\n                </Grid>\r\n                <PushToTalkButtonContainer>\r\n                <PushToTalkButton />\r\n                <ErrorPanel />\r\n                </PushToTalkButtonContainer>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { SpeechProvider } from '@speechly/react-client';\r\nimport { Provider } from './context/context';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n    <SpeechProvider appId=\"3d36d5d3-6a54-44b7-9589-f5e5ea55e4a6\" language=\"en-US\">\r\n    <Provider>\r\n        <App />\r\n    </Provider>\r\n    </SpeechProvider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}